{"version":3,"file":"dialog.js","mappings":";4QACA,uvNADA,WACE,aA2G8B,aAwB7B,OAxB6B,cAA9B,WAA+BA,EAAMC,EAAMC,GAAQ,2FAC1BC,iBAAiB,sDAAuDH,EAAMC,GAAK,OAAtGG,EAAa,EAAH,KACRC,EAAaC,KAAKC,MAAMH,GAC9BI,QAAQC,IAAIJ,GACZG,QAAQC,IAAmB,QAAhB,EAACJ,EAAWK,YAAI,aAAf,EAAiBC,OAE7B,4CAkBD,sBASD,SAASC,EAAYC,GACnBC,OAAOC,QAAQC,GAAGC,cAAcJ,EAClC,CAEA,SAASK,EAAmBC,EAAMC,GAC3BA,IACHA,EAAMC,OAAOC,SAASC,MAExBJ,EAAOA,EAAKK,QAAQ,UAAW,QAC/B,IACEC,EADY,IAAIC,OAAO,OAASP,EAAO,qBACvBQ,KAAKP,GACvB,OAAKK,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,IAGvB,CAvJAV,OAAOe,WAAa,SAAUC,GAC5BC,OAAOC,UAAUC,OAAM,WACjBZ,OAAOC,SAASY,SAELhB,EAAmB,QAE9BiB,EAAE,2BAA2BC,QAIhBlB,EAAmB,kBACjBA,EAAmB,mBAkCtCiB,EAAE,kBAAkBE,GAAG,SAAS,WAC9B,IAAMC,EAAW,CAAC,EAElBA,EAASC,eAAiBJ,EAAE,gBAAgBK,MAE5C,IAAMC,EAAeN,EAAE,4BACnBM,IACFH,EAASI,cAAgBD,EAAaD,MAEtC5B,EAAYN,KAAKqC,UAAUL,IAE/B,IAKAH,EAAE,qBAAqBE,GAAG,SAAS,WACjC,IAAMC,EAAW,CAAC,EAElBH,EAAE,cAAcS,QAChB,IAAMC,EAASV,EAAE,gBAAgBK,MAC3BM,EAASX,EAAE,gBAAgBK,MACjChC,QAAQC,IAAI,+BACZD,QAAQC,IAAIoC,GACZrC,QAAQC,IAAIqC,GACRD,EAAOE,OAAS,GAgCzB,SAE8B,EAAD,6BAjCtBC,CAAgBH,EAAQC,GAG1BR,EAASC,eAAiBJ,EAAE,gBAAgBK,MAE5C,IAAMC,EAAeN,EAAE,4BACnBM,IACFH,EAASI,cAAgBD,EAAaD,MAEtC5B,EAAYN,KAAKqC,UAAUL,IAE/B,GACF,GACF,CAoED,CA5JD","sources":["webpack://office-addin-taskpane/./src/settings/dialog.js"],"sourcesContent":["(function () {\r\n  \"use strict\";\r\n\r\n  // The Office initialize function must be run each time a new page is loaded.\r\n  Office.initialize = function (reason) {\r\n    jQuery(document).ready(function () {\r\n      if (window.location.search) {\r\n        // Check if warning should be displayed.\r\n        const warn = getParameterByName(\"warn\");\r\n        if (warn) {\r\n          $(\".not-configured-warning\").show();\r\n        } else {\r\n          // See if the config values were passed.\r\n          // If so, pre-populate the values.\r\n          const user = getParameterByName(\"gitHubUserName\");\r\n          const gistId = getParameterByName(\"defaultGistId\");\r\n\r\n          /* \r\n          $(\"#github-user\").val(user);\r\n          loadGists(user, function (success) {\r\n            if (success) {\r\n              $(\".ms-ListItem\").removeClass(\"is-selected\");\r\n              $(\"input\")\r\n                .filter(function () {\r\n                  return this.value === gistId;\r\n                })\r\n                .addClass(\"is-selected\")\r\n                .attr(\"checked\", \"checked\");\r\n              $(\"#settings-done\").removeAttr(\"disabled\");\r\n            }\r\n          });*/\r\n        }\r\n      }\r\n\r\n      // When the GitHub username changes,\r\n      // try to load gists.\r\n      /*\r\n      $(\"#github-user\").on(\"change\", function () {\r\n        $(\"#gist-list\").empty();\r\n        const ghUser = $(\"#github-user\").val();\r\n        if (ghUser.length > 0) {\r\n          loadGists(ghUser);\r\n        }\r\n      });\r\n      */\r\n\r\n      // When the Done button is selected, send the\r\n      // values back to the caller as a serialized\r\n      // object.\r\n      $(\"#settings-done\").on(\"click\", function () {\r\n        const settings = {};\r\n\r\n        settings.gitHubUserName = $(\"#github-user\").val();\r\n\r\n        const selectedGist = $(\".ms-ListItem.is-selected\");\r\n        if (selectedGist) {\r\n          settings.defaultGistId = selectedGist.val();\r\n\r\n          sendMessage(JSON.stringify(settings));\r\n        }\r\n      });\r\n\r\n      // When the Done button is selected, send the\r\n      // values back to the caller as a serialized\r\n      // object.\r\n      $(\"#credentials-done\").on(\"click\", function () {\r\n        const settings = {};\r\n\r\n        $(\"#gist-list\").empty();\r\n        const ghUser = $(\"#github-user\").val();\r\n        const ghPass = $(\"#github-pass\").val();\r\n        console.log('inside click of credentials');\r\n        console.log(ghUser);\r\n        console.log(ghPass);\r\n        if (ghUser.length > 0) {\r\n          loadCredentials(ghUser, ghPass);\r\n        }\r\n\r\n        settings.gitHubUserName = $(\"#github-user\").val();\r\n\r\n        const selectedGist = $(\".ms-ListItem.is-selected\");\r\n        if (selectedGist) {\r\n          settings.defaultGistId = selectedGist.val();\r\n\r\n          sendMessage(JSON.stringify(settings));\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  // Load gists for the user using the GitHub API\r\n  // and build the list.\r\n  function loadGists(user, callback) {\r\n    getUserGists(user, function (gists, error) {\r\n      if (error) {\r\n        $(\".gist-list-container\").hide();\r\n        $(\"#error-text\").text(JSON.stringify(error, null, 2));\r\n        $(\".error-display\").show();\r\n        if (callback) callback(false);\r\n      } else {\r\n        $(\".error-display\").hide();\r\n        buildGistList($(\"#gist-list\"), gists, onGistSelected);\r\n        $(\".gist-list-container\").show();\r\n        if (callback) callback(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function loadCredentials(user, pass, callback) {\r\n    var remoteCode = await makeTokenRequest(\"https://stage-api.meridianmedlegal.com/api/v1/login\", user, pass);\r\n    const dataParsed = JSON.parse(remoteCode);\r\n    console.log(dataParsed);\r\n    console.log(dataParsed.data?.token); \r\n\r\n    /*\r\n    getTokenGlobal(user, pass, function (user, pass, error) {\r\n      if (error) {\r\n        $(\".gist-list-container\").hide();\r\n        $(\"#error-text\").text(JSON.stringify(error, null, 2));\r\n        $(\".error-display\").show();\r\n        console.log('error in credentials');\r\n        if (callback) callback(false);\r\n      } else {\r\n        $(\".error-display\").hide();\r\n        $(\".gist-list-container\").hide();\r\n        console.log('ok in credentials');\r\n        buildBodyContent($(\"#welcome-crm\"), user);\r\n        //$('.gist-list-container').show();\r\n        if (callback) callback(true);\r\n      }\r\n    });\r\n    */\r\n  }\r\n\r\n  function onGistSelected() {\r\n    $(\".ms-ListItem\").removeClass(\"is-selected\").removeAttr(\"checked\");\r\n    $(this).children(\".ms-ListItem\").addClass(\"is-selected\").attr(\"checked\", \"checked\");\r\n    $(\".not-configured-warning\").hide();\r\n    $(\"#settings-done\").removeAttr(\"disabled\");\r\n  }\r\n\r\n  function sendMessage(message) {\r\n    Office.context.ui.messageParent(message);\r\n  }\r\n\r\n  function getParameterByName(name, url) {\r\n    if (!url) {\r\n      url = window.location.href;\r\n    }\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n      results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return \"\";\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n})();\r\n"],"names":["user","pass","callback","makeTokenRequest","remoteCode","dataParsed","JSON","parse","console","log","data","token","sendMessage","message","Office","context","ui","messageParent","getParameterByName","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","initialize","reason","jQuery","document","ready","search","$","show","on","settings","gitHubUserName","val","selectedGist","defaultGistId","stringify","empty","ghUser","ghPass","length","loadCredentials"],"sourceRoot":""}