{"version":3,"file":"taskpane.js","mappings":";yBACA,IAAIA,EAAsB,CAAC,qPCA3B,ovNA2BC,kCAXM,8EAG6B,MADzBC,YACEC,qBACTC,iBACAC,mBACAC,iBACAC,KAEAC,mBACD,4CACF,sBAEM,SAAeD,IAAoB,+BAMzC,kCANM,oFAELE,EAASP,YACTQ,SAASC,eAAe,YAAYC,MAAQH,EAAON,oBACnDO,SAASC,eAAe,YAAYC,MAAQH,EAAOI,oBACnDC,IAAwB,4CACzB,sBAEM,SAAeA,IAAqB,+BAc1C,kCAdM,wFAEoD,OADrDC,EAAYL,SAASC,eAAe,YAAYC,MAChDI,EAAYN,SAASC,eAAe,YAAYC,MAAK,SACpCK,SAASF,EAAWC,GAAU,OAAvC,GACK,QADbE,EAAW,EAAH,MACS,gBACnBC,cAAc,gDAAgD,uBAKzB,OAHrCf,iBACAC,mBACAe,qBACAC,eAAeN,EAAWC,GAAW,UAC/BM,eAAeJ,GAAS,yBACxBK,iBAAiBL,GAAS,6CAEnC,sBAIA,kCAHM,8FAE0CM,eAAc,OAA7Dd,SAASC,eAAe,SAASC,MAAQ,EAAH,iDACvC,sBAMA,kCALM,oFAECa,EAAOC,OAAOC,QAAQC,QAAQH,KAEpCf,SAASC,eAAe,YAAYC,MAAQa,EAAKI,kBAAkB,4CACpE,sBAiBM,SAAeC,IAAQ,+BA6B7B,kCA7BM,gGAQgB,OANjBC,EAAkBrB,SAASC,eAAe,WAAWC,MAErDoB,EAAmBtB,SAASC,eAAe,YAAYC,MAEvDqB,EAAgBvB,SAASC,eAAe,SAASC,MAErDH,EAASP,YAAY,SACAgC,YACnBzB,EAAON,oBACPM,EAAOI,oBACPkB,EACAC,EACAC,GACD,OAC2D,OAPxDf,EAAW,EAAH,KAONiB,EAAYT,OAAOC,QAAQC,QAAQH,KAAKW,eAAc,UACtCC,eACpB5B,EAAON,oBACPM,EAAOI,oBACPkB,EACAI,GACD,QALGG,EAAY,EAAH,KAOI,OAAbpB,GAAmC,OAAdoB,EACvBnB,cAAc,yBAEdoB,gBAAgB,oCACjB,6CACF,sBC3GDtC,EAAoBuC,EAAI,SAASC,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXzC,EAAoB2C,EAAEF,EAAYC,KAAS1C,EAAoB2C,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPA1C,EAAoB2C,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,EFMtGxB,OAAO4B,SAAQ,SAACC,GACVA,EAAKC,OAAS9B,OAAO+B,SAASC,UAChChD,SAASC,eAAe,YAAYgD,MAAMC,QAAU,OACpDlD,SAASC,eAAe,UAAUkD,QAAU/B,EAC5CpB,SAASC,eAAe,wBAAwBkD,QAAU/C,EA+CvD,WAA6B,wBA9ChCgD,GA0CG,WAA+B,wBAzClCC,GAKG,WAAoC,wBAJvCC,GAEJ","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/./src/taskpane/taskpane.js","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global document, Office */\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Outlook) {\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    document.getElementById(\"submit\").onclick = saveNote;\r\n    document.getElementById(\"credentials-crm-done\").onclick = login_user_validation;\r\n    initialSubject();\r\n    initialClipboard();\r\n    display_initial_panes();\r\n  }\r\n});\r\n\r\nexport async function display_initial_panes() {\r\n  let config;\r\n  config = getConfig();\r\n  if (config.applicationUserName != null) {\r\n    clean_up_error();\r\n    hide_login_panel();\r\n    user_logged_in();\r\n    initialLoginExistent();\r\n  } else {\r\n    login_panel_only();\r\n  }\r\n}\r\n\r\nexport async function initialLoginExistent() {\r\n  let config;\r\n  config = getConfig();\r\n  document.getElementById(\"crm-user\").value = config.applicationUserName;\r\n  document.getElementById(\"crm-pass\").value = config.applicationPassName;\r\n  login_user_validation();\r\n}\r\n\r\nexport async function login_user_validation() {\r\n  var userTyped = document.getElementById(\"crm-user\").value;\r\n  var passTyped = document.getElementById(\"crm-pass\").value;\r\n  let response = await getToken(userTyped, passTyped);\r\n  if (response === null) {\r\n    display_error(\"The user and password provided are not valid\");\r\n  } else {\r\n    clean_up_error();\r\n    hide_login_panel();\r\n    display_cases_form();\r\n    setValidConfig(userTyped, passTyped);\r\n    await getEmailLinked(response);\r\n    await getDashboardInfo(response);\r\n  }\r\n}\r\nexport async function initialClipboard() {\r\n  // Get information from clipboard\r\n  document.getElementById(\"fnote\").value = await getClipboard();\r\n}\r\nexport async function initialSubject() {\r\n  // Get a reference to the current message\r\n  const item = Office.context.mailbox.item;\r\n  // Write message property value to the task pane\r\n  document.getElementById(\"fsubject\").value = item.normalizedSubject;\r\n}\r\n\r\nexport async function run() {\r\n  let config;\r\n  let tokenFromUser;\r\n  config = getConfig();\r\n  tokenFromUser = await recentlyVisitedCases(config.applicationUserName, config.applicationPassName);\r\n  document.getElementById(\"item-subject\").innerHTML = \"<b>Subject:</b> <br/>\" + item.subject;\r\n}\r\n\r\nexport async function cases() {\r\n  // Get a reference to the current message\r\n  let config;\r\n  config = getConfig();\r\n  await recentlyVisitedCases(config.applicationUserName, config.applicationPassName);\r\n}\r\n\r\nexport async function saveNote() {\r\n  //Case Id\r\n  var fcaseidObtained = document.getElementById(\"fcaseid\").value;\r\n  //Subject\r\n  var fsubjectObtained = document.getElementById(\"fsubject\").value;\r\n  //Note\r\n  var fnoteObtained = document.getElementById(\"fnote\").value;\r\n  let config;\r\n  config = getConfig();\r\n  let response = await saveNoteCRM(\r\n    config.applicationUserName,\r\n    config.applicationPassName,\r\n    fcaseidObtained,\r\n    fsubjectObtained,\r\n    fnoteObtained\r\n  );\r\n  const emailHash = Office.context.mailbox.item.conversationId;\r\n  let response2 = await saveEmailChain(\r\n    config.applicationUserName,\r\n    config.applicationPassName,\r\n    fcaseidObtained,\r\n    emailHash\r\n  );\r\n\r\n  if (response === null || response2 === null) {\r\n    display_error(\"The note is not valid\");\r\n  } else {\r\n    display_success(\"The note was stored successfully\");\r\n  }\r\n}\r\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["__webpack_require__","getConfig","applicationUserName","clean_up_error","hide_login_panel","user_logged_in","initialLoginExistent","login_panel_only","config","document","getElementById","value","applicationPassName","login_user_validation","userTyped","passTyped","getToken","response","display_error","display_cases_form","setValidConfig","getEmailLinked","getDashboardInfo","getClipboard","item","Office","context","mailbox","normalizedSubject","saveNote","fcaseidObtained","fsubjectObtained","fnoteObtained","saveNoteCRM","emailHash","conversationId","saveEmailChain","response2","display_success","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","onReady","info","host","HostType","Outlook","style","display","onclick","initialSubject","initialClipboard","display_initial_panes"],"sourceRoot":""}